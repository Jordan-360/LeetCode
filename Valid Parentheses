LeetCode - Easy - Valid Parantheses

Given a string s containing just the characters '(', ')', '{', '}', '[' and ']', determine if the input string is valid.

An input string is valid if:

Open brackets must be closed by the same type of brackets.
Open brackets must be closed in the correct order.
Every close bracket has a corresponding open bracket of the same type.

Example 1:

Input: s = "()"

Output: true

class Solution {
    public boolean isValid(String s) {
         if(s.length() % 2 != 0) {
           return false;
       }
       Stack<Character> stack = new Stack<>();
       for(char character : s.toCharArray()) {
           if(character == '(' || character == '[' || character == '{') {
               stack.push(character);
           } else if(character == ')' && !stack.isEmpty() && stack.peek() == '(') {
               stack.pop();
           } else if(character == '}' && !stack.isEmpty() && stack.peek() == '{') {
               stack.pop();
           } else if(character == ']' && !stack.isEmpty() && stack.peek() == '[') {
               stack.pop();
           } else {
               stack.push(character);
           }
       }
       return stack.isEmpty();
    }
}
